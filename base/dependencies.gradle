ext {
    /******************************************
     ** Versions
     ******************************************/

    //Kotlin
    kotlin_version = '1.2.50'

    //Support
    supportLibraryVersion = '28.0.0-alpha3'

    //AndroidX
    androidxVersion = '1.0.0-alpha1'
    ktxVersion = '0.3'

    //Navigation
    navigationVersion = '1.0.0-alpha03'

    //LifeCycle
    lifeCycleVersion = '1.1.1'

    //LifeCycleX
    lifeCycleXVersion = '2.0.0-beta01'

    //Constraints
    constraintVersion = '1.1.2'

    //RestClient
    retrofitVersion = '2.3.0'
    retrofitLoggingVersion = '3.9.1'
    gsonVersion = '2.8.2'
    okhttpVersion = '3.10.0'

    //Image
    picassoVersion = '2.5.2'

    //Lists
    flexibleAdapterVersion = '5.0.5'
    flexibleAdapterUIVersion = '1.0.0-b5'

    //Dagger
    daggerVersion = '2.16'

    //WorkManager
    workVersion = '1.0.0-alpha04'

    //Logging
    timberVersion = '4.7.1'

    //Reactive
    rxKotlinVersion = '2.2.0'
    rxBusVersion = '0.2'
    rxAndroidVersion = '2.0.2'
    rxJavaVersion = '2.1.12'

    //Leak Canary
    leakCanaryVersion = '1.5.4'

    //Play Services
    //Warning: DO NOT UPDATE THESE at any cost!!
    playServicesVersion = '15.0.1'

    //Crash Reporting
    crashlyticsVersion = '2.9.4@aar'

    //Microsoft Azure
    azureMobileVersion = '3.1.0'
    azureNotificationsVersion = '1.0.1@aar'
    azureSDKVersion = '0.4@aar'

    //Realm
    realmEncryptionHelperVersion = '1.0.2'

    //Test
    junitVersion = '4.12'
    testRunnerVersion = '1.0.2'
    espressoCoreVersion = '3.1.0-alpha3'
    hamcrestVersion = '1.3'
    powerMockVersion = '1.6.5'
    roboElectricSnapshotVersion = '4.0-alpha-3-SNAPSHOT'
    roboElectricVersion = '3.4-rc2'
    mockitoVersion = '1.10.19'

    /******************************************
     ** Dependencies
     ******************************************/

    //AndroidX
    xDependencies = [
            coreX             : "androidx.core:core-ktx:${ktxVersion}",
            designX           : "com.google.android.material:material:${androidxVersion}",
            recyclerViewX     : "androidx.recyclerview:recyclerview:${androidxVersion}",
            cardViewX         : "androidx.cardview:cardview:${androidxVersion}",
            appCompatX        : "androidx.appcompat:appcompat:${androidxVersion}",
            supportAnnotationX: "androidx.annotation:annotation:${androidxVersion}",
            xFragment         : "androidx.fragment:fragment:${androidxVersion}",
            constraintX       : "androidx.constraintlayout:constraintlayout:${constraintVersion}",
            lifeCycleX        : "androidx.lifecycle:lifecycle-extensions:${lifeCycleXVersion}",
    ]

    //Support
    supportDependencies = [
            design           : "com.android.support:design:${supportLibraryVersion}",
            recyclerView     : "com.android.support:recyclerview-v7:${supportLibraryVersion}",
            cardView         : "com.android.support:cardview-v7:${supportLibraryVersion}",
            appCompat        : "com.android.support:appcompat-v7:${supportLibraryVersion}",
            supportAnnotation: "com.android.support:support-annotations:${supportLibraryVersion}",
            supportFragment  : "com.android.support:support-fragment:${supportLibraryVersion}",
            supportv4        : "com.android.support:support-core-utils:${supportLibraryVersion}",
            constraint       : "com.android.support.constraint:constraint-layout:${constraintVersion}",
            lifeCycle        : "android.arch.lifecycle:extensions:${lifeCycleVersion}",
            supportv13       : "com.android.support:support-v13:${supportLibraryVersion}",

    ]

    //Navigation API
    navigationDependencies = [
            navFragment: "android.arch.navigation:navigation-fragment-ktx:${navigationVersion}",
            navUI      : "android.arch.navigation:navigation-ui-ktx:${navigationVersion}",
    ]

    //Retrofit
    retrofitDependencies = [
            retrofit       : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitRxJava2: "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            retrofitGson   : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitLogging: "com.squareup.okhttp3:logging-interceptor:${retrofitLoggingVersion}",
            gson           : "com.google.code.gson:gson:${gsonVersion}",
            okhttp3        : "com.squareup.okhttp3:okhttp:${okhttpVersion}",
    ]

    //Image
    imageDependencies = [
            picasso: "com.squareup.picasso:picasso:${picassoVersion}",
    ]

    //Lists
    listsDependencies = [
            flexibleAdapter  : "eu.davidea:flexible-adapter:${flexibleAdapterVersion}",
            flexibleAdapterUI: "eu.davidea:flexible-adapter-ui:${flexibleAdapterUIVersion}",
    ]

    //Dagger
    daggerDependencies = [
            dagger         : "com.google.dagger:dagger:${daggerVersion}",
            daggerSupport  : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerCompiler : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}",
    ]

    //Reactive
    reactiveDependencies = [
            rxKotlin : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxBus    : "com.github.MFlisar:RxBus2:${rxBusVersion}",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            rxJava   : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
    ]

    //LeakCanary
    leakDependencies = [
            leakCanaryAndroid: "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            leakCanaryRelease: "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
    ]

    //PlayServices
    playServicesDependencies = [
            //Warning: DO NOT UPDATE THESE at any cost!!
            gcm     : "com.google.android.gms:play-services-gcm:${playServicesVersion}",
            maps    : "com.google.android.gms:play-services-maps:${playServicesVersion}",
            location: "com.google.android.gms:play-services-location:${playServicesVersion}",
            vision  : "com.google.android.gms:play-services-vision:${playServicesVersion}",
    ]

    //Azure
    azureDependencies = [
            azureMobile       : "com.microsoft.azure:azure-mobile-android:${azureMobileVersion}",
            azureSDK          : "com.microsoft.azure:notification-hubs-android-sdk:${azureSDKVersion}",
            azureNotifications: "com.microsoft.azure:azure-notifications-handler:${azureNotificationsVersion}",
    ]

    //Background Workers
    workManager = "android.arch.work:work-runtime-ktx:${workVersion}"

    //Logging
    timber = "com.jakewharton.timber:timber:${timberVersion}"

    //Crashlytics
    crashlytics = "com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}"

    //RealmEncryption
    realmEncryptionHelper = "com.github.tntkhang:realm-encryption-helper:${realmEncryptionHelperVersion}"

    //Tests
    testDependencies = [
            junit                    : "junit:junit:${junitVersion}",
            testRules                : "com.android.support.test:rules:${junitVersion}",
            testRunner               : "androidx.test:runner:${testRunnerVersion}",
            orchestrator             : "com.android.support.test:orchestrator:${testRunnerVersion}",
            espressoCore             : "androidx.test.espresso:espresso-core:${espressoCoreVersion}",
            hamcrest                 : "org.hamcrest:hamcrest-library:${hamcrestVersion}",
            powerMock                : "org.powermock:powermock-module-junit4:${powerMockVersion}",
            powerMockRules           : "org.powermock:powermock-module-junit4-rule:${powerMockVersion}",
            powerMockMockito         : "org.powermock:powermock-api-mockito:${powerMockVersion}",
            powerMockXStream         : "org.powermock:powermock-classloading-xstream:${powerMockVersion}",
            roboElectric             : "org.robolectric:robolectric:${roboElectricSnapshotVersion}",
            roboElectricShadowSupport: "org.robolectric:shadows-support-v4:${roboElectricVersion}",
            mockito                  : "org.mockito:mockito-core:${mockitoVersion}",
            mockwebserver            : "com.squareup.okhttp3:mockwebserver:${okhttpVersion}",
    ]
}
/*****************************************************************
 ** Note: Use this to add complete array as dependency at once:
 *
 * implementation supportDependencies.values()
 *****************************************************************/